
TS001 = Basic Elements Layout Behavior

TS001.TC001             = @UISection
TS001.TC001.description = To test the behavior of all basic UI elements in an @UISection
TS001.TC001.items       = Simple model binding\nSetting the components to in/visible, required, read-only\nAll elements, including labels, links, checkboxes and buttons have labels
TS001.TC002             = @UIFormSection
TS001.TC002.description = To test the behavior of all basic UI elements in an @UIFormSection
TS001.TC002.items       = Simple model binding\nSetting the components to in/visible, required, read-only\nAll elements, including labels, links, checkboxes and buttons have labels
TS001.TC003             = @HorizontalLayout
TS001.TC003.description = To test the behavior of all basic UI elements in an @HorizontalLayout
TS001.TC003.items       = Simple model binding\nSetting the components to in/visible, required, read-only\nLabels, links, checkboxes and buttons do not have labels
TS001.TC004             = @VerticalLayout
TS001.TC004.description = To test the behavior of all basic UI elements in an @VerticalLayout
TS001.TC004.items       = Simple model binding\nSetting the components to in/visible, required, read-only\nLabels, links, checkboxes and buttons do not have labels
TS001.TC005             = @UIFormLayout
TS001.TC005.description = To test the behavior of all basic UI elements in an @UIFormLayout
TS001.TC005.items       = Simple model binding\nSetting the components to in/visible, required, read-only\nLabels, links, checkboxes and buttons do not have labels
TS001.TC006             = @UICssLayout
TS001.TC006.description = To test the behavior of all basic UI elements in an @UICssLayout
TS001.TC006.items       = Simple model binding\nSetting the components to in/visible, required, read-only\nLabels, links, checkboxes and buttons do not have labels

TS002 = Section Header

TS002.TC001             = Section Header
TS002.TC001.description = To test the section header behavior
TS002.TC001.items       = Buttons in section header\nComponent without @SectionHeader annotation

TS003 = Localization

TS003.TC001             = Elements Localization
TS003.TC001.description = To test the localization of basic element
TS003.TC001.items       = Localized section title\nLocalized element labels\nLocalized formats (Double, Decimal, Date)\nLocalized button caption

TS004 = IPS

TS004.TC001             = linkki With Faktor-IPS Model
TS004.TC001.description = IpsPropertyDispatcher Label Binding
TS004.TC001.items       = The label of the Textfield is loaded from the IPS model object documentation
TS004.TC002             = @UIDecimalField
TS004.TC002.description = To test the @UIDecimalField behaviors with
TS004.TC002.items       = Default format\nNo decimal places\nThousands separator\nRange checks with error messages
TS004.TC003             = IpsDispatcher on required
TS004.TC003.description = Check that the IpsPropertyDispatcher uses the ValueSet information to derive the required state. The required marker must be visible only at the first TextField.
TS004.TC003.items       = IpsPropertyDispatcher Required Behaviour
TS004.TC004             = IpsDispatcher on visibility
TS004.TC004.description = Check that the IpsPropertyDispatcher uses the ValueSet information to derive the visible state. There should be one TextField and one Combobox visible. Another Combobox between them must not be visible.
TS004.TC004.items       = IpsPropertyDispatcher Visible Behaviour
TS004.TC005             = IpsPropertyDispatcher on Enabled
TS004.TC005.description = Check that the IpsDispatcher uses the ValueSet information to derive the enabled state. The ValueSet of the first control is not empty and therefore it must be enabled. The ValueSet of the second control is empty and therefore it must be disabled. The ValueSet of the last control is empty but the enabled behavior is dynamically set to enabled.
TS004.TC005.items       = IpsPropertyDispatcher Enabled Behaviour
TS004.TC006             = Decimal as @UILabel
TS004.TC006.description = Decimal should be correctly displayed as a @UILabel, using the default format.
TS004.TC006.items       =

TS005 = Components

TS005.TC001             = @UILabel
TS005.TC001.description = Components created with @UILabel
TS005.TC001.items       = It should be possible to enable HTML content.\r\nIt should be possible to ignore HTML content.\r\nUsing BigDecimal as return value should render without exception.\r\nLocalDate as return value should be shown using registered converter (dd-MM-yyyy in DE).\r\nLocalDateTime as return value should be shown using registered converter (dd-MM-yyyy hh:mm in DE).\r\nEnum as return value should be shown using literal name by default.\r\nEnum with getName() as return value should be shown using getName() by default.\r\nIn tables: It should be able to show HTML content.\r\nIn tables: Long labels should break at white spaces.\r\nIn tables: It should be possible to make the label right aligned.
TS005.TC002             = @UIIntegerField
TS005.TC002.description = Components created with @UIIntegerField
TS005.TC002.items       = Field starts empty if Integer is used\r\nField starts with 0 if int is used
TS005.TC003             = @UIDoubleField
TS005.TC003.description = Components created with @UIDoubleField
TS005.TC003.items       = Field starts empty if Double is used\r\nField starts with 0.00 if double is used
TS005.TC004             = @UITextArea
TS005.TC004.description = Component created with @UITextArea
TS005.TC004.items       = Field has a size of 5 em
TS005.TC005             = @UITextField
TS005.TC005.description = Component created with @UITextField
TS005.TC005.items       =
TS005.TC006             = @UIDateField
TS005.TC006.description = Component created with @UIDateField
TS005.TC006.items       =
TS005.TC007             = @UIComboBox
TS005.TC007.description = Components created with @UIComboBox
TS005.TC007.items       = The combo box "With null" can be cleared after selecting a value
TS005.TC008             = @UIRadioButtons
TS005.TC008.description = Components created with @UIRadioButtons
TS005.TC008.items       = The radio buttons use the caption provider\r\nThe radio buttons "With null" have a "None" item, which is selected by default\r\nThe radio buttons "Without null" do not have a "None" item, nothing is selected by default
TS005.TC009             = @UILink
TS005.TC009.description = Component created with @UILink
TS005.TC009.items       = The link text updates when "Link Caption" is changed\r\nThe link href updates when "Link Address" is changed\r\nThe link icon updates when "Link Icon" is changed\r\nThe link target is _blank
TS005.TC010             = @UIButton
TS005.TC010.description = Components created with @UIButton
TS005.TC010.items       = Using Button Variants primary and tertiary\nThe Shortcut Key Events on 'Enter', 'Ctrl+Enter' should not occur when @UITextArea is focused
TS005.TC011             = @UICustomField
TS005.TC011.description = PasswordField component created with @UICustomField
TS005.TC011.items       =
TS005.TC012             = Dynamic Component
TS005.TC012.description = The type of the second component is dynamically set on behave of the selection of the ComboBox.
TS005.TC012.items       =

TS006 = LinkkiText

TS006.TC001             = LinkkiText
TS006.TC001.description = Tests the update and UI behavior of LinkkiText.
TS006.TC001.items       = Setting and changing the text\nSetting and changing the icon\nRemove the icon

TS007 = Alignment

TS007.TC001             = Vertical Alignment in HorizontalLayout
TS007.TC001.description = Three HorizontalLayouts with a fixed height next to each other. Each layout contains one TextField with a specific alignment set.
TS007.TC001.items       = The TextField of the first layout should be placed at the top\nThe TextField of the second layout should be placed in the middle\nThe TextField of the last layout should be placed at the bottom of the layout
TS007.TC002             = Horizontal Alignment in VerticalLayout
TS007.TC002.description = Three VerticalLayouts with a fixed width next to each other. Each layout contains one TextField with a specific alignment set.
TS007.TC002.items       = The TextField of the first layout should be placed on the left\nThe TextField of the second layout should be placed in the middle\nThe TextField of the last layout should be placed on the right of the layout

TS008 = Aspects

TS008.TC001             = @BindStyleNames
TS008.TC001.description = A simple Label within a VerticalLayout with a border that has three different styles attached.
TS008.TC001.items       = The first style makes the layout blue and adds the border\nThe second one makes the font white\nThe third one makes the font bold

TS009 = Notifications

TS009.TC001             = Text Notifications
TS009.TC001.description = Notifications containing a title and a text.
TS009.TC001.items       = The notification variant (background color) is different depending on the severity\r\nInfo notifications close automatically\r\nWarning notifications close automatically\r\nError notifications close only when the button is clicked
TS009.TC002             = MessageList Notifications
TS009.TC002.description = Notifications containing a title and a list of messages. If the text is left is blank, the message is not created.
TS009.TC002.items       = The notification variant (background color) is dependant on the maximum severity message\r\nAll messages have an icon corresponding to their severity\r\nInfo notifications close automatically\r\nWarning notifications close automatically\r\nError notifications close only when the button is clicked

TS010 = LinkkiTabLayout

TS010.TC001             = Vertical Layout
TS010.TC001.description = A LinkkiTabLayout with horizontal orientation.
TS010.TC001.items       = The tab selectors are placed above of the content
TS010.TC002             = Horizontal Layout
TS010.TC002.description = A LinkkiTabLayout with vertical orientation.
TS010.TC002.items       = The tab selectors are placed on the left of the content
TS010.TC003             = Tab visibility
TS010.TC003.description = The visibility of the tabs can be set using the checkboxes. To apply the settings, the update button has to be pressed.
TS010.TC003.items       = Tabs set invisible are hidden\r\nTabs set to visible are shown\r\nIf the current tab is set invisible, the first visible tab should be selected\r\nWhen all tabs are invisible, all content should be invisible\r\n

TS011 = Dialogs

TS011.TC001             = OkCancelDialog Handlers
TS011.TC001.description = The okHandler and cancelHandler of the OkCancelDialog display a corresponding notification.
TS011.TC001.items       = The okHandler is run when the OK button is pressed\r\nThe cancelHandler is run when the Cancel button is pressed\r\nThe cancelHandler is run when the Escape key is pressed\r\nThe cancelHandler is run when the user clicks outside the dialog
