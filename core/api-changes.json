{
  "1.4.0": [
    {
      "extension": "revapi.differences",
      "configuration": {
        "ignore": true,
        "differences": [
          {
            "code": "java.method.visibilityReduced",
            "old": "method void org.linkki.core.binding.dispatcher.reflection.accessor.AbstractMethod<T>::<init>(org.linkki.core.binding.dispatcher.reflection.accessor.PropertyAccessDescriptor<T, ?>, java.util.function.Supplier<java.util.Optional<java.lang.reflect.Method>>)",
            "new": "method void org.linkki.core.binding.dispatcher.reflection.accessor.AbstractMethod<T>::<init>(org.linkki.core.binding.dispatcher.reflection.accessor.PropertyAccessDescriptor<T, ?>, java.util.function.Supplier<java.util.Optional<java.lang.reflect.Method>>)",
            "oldVisibility": "public",
            "newVisibility": "protected",
            "justification": "Constructor of abstract classes can only be called in their subclasses"
          }
        ]
      }
    }
  ]
}