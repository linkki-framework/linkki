library 'f10-jenkins-library@1.1_patches'

pipeline {
    agent any

    environment {
        PROJECT_NAME = 'linkki'
        BUILD_NAME = 'next-JavaLTS'
        CONTAINER_RETENTION = 'keep'
        BASE_IMAGE = 'spring:24.7-java21'
    }

    stages {
        stage('Pre-Build') {
            steps {
                script {
                    currentBuild.displayName = "#${env.BUILD_NUMBER}.${env.BUILD_NAME}"
                    currentBuild.description = "Runs and tests the application with the next Java LTS"
                }
            }
        }

        stage('Build') {
            steps {
                withMaven(maven: 'maven 3.9', jdk: 'OpenJDK 21', publisherStrategy: 'EXPLICIT') {
                    sh 'mvn -U -T 6 \
                            -P production \
                            -pl "!vaadin-flow/doc" \
                            -pl "!vaadin-flow/apt" \
                            clean source:jar javadoc:jar deploy'
                }
            }
        }

        stage('Dependency-Check') {
            steps {
                withMaven(maven: 'maven 3.9', jdk: 'OpenJDK 17', publisherStrategy: 'EXPLICIT') {
                    dependencyCheck version: '25.1'
                }
            }
        }

        stage('Docker Deployment') {
            steps {
                sh 'bash -x .ci/docker_setup.sh ${BUILD_NAME} ${BASE_IMAGE}'

                rtp parserName: 'HTML', nullAction: '1', stableText: """
                    <h3>Test Playground</h3>
                    <ul>
                        <li><a href='http://linkki-${env:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-test-playground-vaadin-flow'>Vaadin Flow</a></li>
                    </ul>
                """
            }
        }

        // wait for the sample applications to be ready to run the tests
        stage('Wait for Server') {
            steps {
                waitForServer "http://linkki-${BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-test-playground-vaadin-flow"
            }
        }

        stage('UI Test') {
            steps {
                withMaven(maven: 'maven 3.9', jdk: 'OpenJDK 21', publisherStrategy: 'EXPLICIT') {
                    sh 'mvn -f vaadin-flow/samples/test-playground/uitest/pom.xml test \
                        -Dmaven.test.failure.ignore=true -Dsurefire.rerunFailingTestsCount=3'
                }

                archiveArtifacts allowEmptyArchive: true, artifacts: 'vaadin-flow/samples/test-playground/uitest/target/error-screenshots/*.png'
                junit 'vaadin-flow/samples/test-playground/uitest/target/surefire-reports-*/*.xml'
            }

            environment {
                MAVEN_OPTS = '-Xmx2g -Dtest.hostname=linkki-${BUILD_NAME}.dockerhost.i.faktorzehn.de -Dtest.port=80 -Dtest.path=linkki-sample-test-playground-vaadin-flow'
            }
        }

        stage('Check Git Diffs') {
            steps {
                verifyNoChangedFiles()
            }
        }
    }

    post {
        always {
            junit '**/target/surefire-reports/*.xml'
            recordIssues enabledForFailure: true, qualityGates: [[threshold: 1, type: 'NEW', unstable: true]], tools: [java(), javaDoc(), spotBugs(), checkStyle()]
            jacoco sourceInclusionPattern: '**/*.java'
        }

        regression {
            sendFailureEmail()
        }
    }

    options {
        buildDiscarder(logRotator(daysToKeepStr: '7', numToKeepStr: '7'))
    }
}
