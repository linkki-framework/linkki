pipeline {
    agent any

    environment {
        BUILD_NAME = "vaadin14"
        DOCKER_HOST = "ssh://docker@dockerhost.i.faktorzehn.de"
        CONTAINER_RETENTION = 'permanent-on'
    }

    stages {

        stage('Build') {
            steps {
                script {
                    currentBuild.displayName = "#${env.BUILD_NUMBER}.${env.BUILD_NAME}"
                }

                withMaven(maven: 'maven 3.5', jdk: 'OpenJDK 8', mavenLocalRepo: '.repository', publisherStrategy: 'EXPLICIT') {
                    sh 'mvn -U -T 6 -Pproduction -Ddoc.user=doc clean source:jar javadoc:jar deploy'
                    sh 'mvn -f vaadin8/samples/test-playground/uitest/pom.xml clean compile'
                    sh 'mvn -f vaadin14/samples/test-playground/uitest/pom.xml clean compile'
                }

                withMaven(maven: 'maven 3.5', jdk: 'OpenJDK 11', mavenLocalRepo: '.repository', publisherStrategy: 'EXPLICIT') {
                    sh 'mvn -T 6 -Dsurefire.directory=surefire-reports-java11 test'
                }
            }

            environment {
                MAVEN_OPTS = '-Xmx768m'
            }
        }

        stage('Docker Deployment') {
            steps {
                sh 'bash -x .ci/docker_setup-test.sh ${BUILD_NAME}'
            }
        }

        stage('Wait for Server') {
            steps {
                // wait with the ui tests until the server is ready
                // since the vaadin8 tests are run first we check if linkki-sample-test-playground-vaadin8 is ready
                // and assume that the vaadin14 environment will be available afterwards
                timeout(time: 3, unit: 'MINUTES') {
                    waitUntil {
                        script {
                            try {
                                sh 'curl --fail http://linkki-${BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-test-playground-vaadin8/main'
                                return true
                            } catch (Exception e) {
                                return false
                            }
                        }
                    }
                }
            }
        }

        stage('UI Test and SonarQube Analysis') {
            parallel {

                stage('UI Test') {
                    when {
                        expression {
                            currentBuild.currentResult == "SUCCESS"
                        }
                    }

                    steps {
                        withMaven(maven: 'maven 3.5', jdk: 'OpenJDK 8', mavenLocalRepo: '.repository', publisherStrategy: 'EXPLICIT') {
                            sh 'mvn -f vaadin8/samples/test-playground/uitest/pom.xml test'
                            sh 'mvn -f vaadin14/samples/test-playground/uitest/pom.xml test'
                        }
                    }

                    environment {
                        MAVEN_OPTS = '-Xmx2g -Dtest.hostname=linkki-${BUILD_NAME}.dockerhost.i.faktorzehn.de -Dtest.port=80'
                    }
                }

                stage('SonarQube Analysis') {
                    environment {
                        SONAR_LOGIN = credentials('sonar.login')
                    }
                    steps {
                        catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                            withMaven(maven: 'maven 3.5', jdk: 'OpenJDK 8', mavenLocalRepo: '.repository', publisherStrategy: 'EXPLICIT') {
                                sh 'mvn -Dsonar.projectName=linkki-$GERRIT_CHANGE_NUMBER -Dsonar.projectKey=linkki-$GERRIT_CHANGE_NUMBER -Dsonar.login=$SONAR_LOGIN sonar:sonar'
                            }

                            rtp parserName: 'HTML', nullAction: '1', stableText: '''
                                <h3>SonarQube</h3>
                                <a href="https://sonarqube.faktorzehn.de/dashboard?id=linkki-${ENV:GERRIT_CHANGE_NUMBER}" target="_blank">https://sonarqube.faktorzehn.de/dashboard?id=linkki-${ENV:GERRIT_CHANGE_NUMBER}</a>
                            '''
                        }
                    }
                }
                
                stage('Docker Deployment') {
                    steps {
                        sh 'bash -x .ci/docker_setup.sh ${BUILD_NAME}'
                        
                        rtp parserName: 'HTML', nullAction: '1', stableText: '''
                            <h3>Vaadin 8 samples</h3>
                            <ul>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-binding-vaadin8">binding sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-messages-vaadin8">messages sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-dynamic-fields-vaadin8">dynamic fields sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-custom-layout-vaadin8">custom layout sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-tree-table-vaadin8">tree table sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-application-vaadin8/main">application sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-getting-started-vaadin8">getting started</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-test-playground-vaadin8/main">test playground</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-ips-vaadin8">IPS sample</a></li>
                            </ul>
                            <br>
                            <h3>Vaadin 14 samples</h3>
                            <ul>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-messages-vaadin14">messages sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-tree-table-vaadin14">tree table sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-application-vaadin14">application sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-getting-started-vaadin14">getting started</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-test-playground-vaadin14">test playground</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-binding-vaadin14">binding sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-dynamic-fields-vaadin14">dynamic fields sample</a></li>
                                <li><a href="http://linkki-${ENV:BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-ips-vaadin14">IPS sample</a></li>
                            </ul>
                        '''
                    }
                }

            }
        }
    }

    post {
        always {
            junit '**/target/surefire-reports/*.xml'
            recordIssues enabledForFailure: true, qualityGates: [[threshold: 1, type: 'NEW', unstable: true]], tools: [java(), javaDoc(), spotBugs(), checkStyle()]
            jacoco sourceInclusionPattern: '**/*.java'

            junit '**/target/surefire-reports-java11/*.xml'

            archiveArtifacts 'vaadin14/doc/target/linkki-core-documentation*/**/*.*'
        }

        regression {
            emailext to: '${REGRESSION_EMAIL_LINKKI}', mimeType: 'text/html', subject: 'Jenkins Build Failure - $PROJECT_NAME', body: '''
                <img src="https://jenkins.io/images/logos/fire/fire.png" style="max-width: 300px;" alt="Jenkins is not happy about it ...">
                <br>
                $BUILD_URL
            '''
        }
    }

    options {
        buildDiscarder(logRotator(daysToKeepStr: '14', numToKeepStr: '30'))
    }
}