library 'f10-jenkins-library@1.0_patches'

pipeline {
   agent any

    options {
        skipDefaultCheckout true
    }

    environment {
        PROJECT_NAME = 'linkki'
        BRANCH_NAME = "${env.GIT_LOCAL_BRANCH}"
        // make sure that the build name does not contain '_' because this will lead to unexpected Docker failures
        DOCKER_BUILD_NAME = "${params.RELEASE_VERSION.replaceAll('_', '-')}"
        DOCKER_HOST = "ssh://docker@dockerhost.i.faktorzehn.de"
        CONTAINER_RETENTION = 'keep'
    }

    stages {
        stage('Prepare Release') {
            steps {
                withMaven(maven: 'maven 3.5', jdk: 'OpenJDK 11', publisherStrategy: 'EXPLICIT') {
                    prepareRelease additionalModules: ['vaadin23/samples/test-playground/uitest']
                }
            }
        }

        stage('Build') {
            steps {
                withMaven(maven: 'maven 3.5', jdk: 'OpenJDK 11', publisherStrategy: 'EXPLICIT') {
                    sh 'mvn -U -P production clean javadoc:jar source:jar install'
                }

                junit "**/target/surefire-reports/*.xml"
                recordIssues enabledForFailure: true, qualityGates: [[threshold: 1, type: 'NEW', unstable: true]], tools: [java(), javaDoc(), spotBugs(), checkStyle()]
                jacoco sourceInclusionPattern: '**/*.java'
            }
        }

        stage('Check Git Diffs') {
            steps {
                verifyNoChangedFiles()
            }
        }

        stage('Docker Deployment') {
            steps {
                sh 'bash -x .ci/docker_setup.sh ${DOCKER_BUILD_NAME}'

                rtp parserName: 'HTML', nullAction: '1', stableText: """
                    <h3>Test Playground</h3>
                    <ul>
                        <li><a href='http://linkki-${env:DOCKER_BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-test-playground-vaadin23'>Vaadin 23</a></li>
                    </ul>
                """
            }
        }

        // wait for the sample applications to be ready to run the tests
        stage('Wait for Server') {
            steps {
                waitForServer "http://linkki-${DOCKER_BUILD_NAME}.dockerhost.i.faktorzehn.de/linkki-sample-test-playground-vaadin23"
            }
        }

        stage('UI Test') {
            // Run Tests only if build was successful
            when {
                expression {
                    return currentBuild.currentResult == "SUCCESS"
                }
            }

            steps {
                withMaven(maven: 'maven 3.5', jdk: 'OpenJDK 11', publisherStrategy: 'EXPLICIT') {
                    sh 'mvn -f vaadin23/samples/test-playground/uitest/pom.xml test \
                        -Dmaven.test.failure.ignore=true'
                }

                archiveArtifacts allowEmptyArchive: true, artifacts: 'vaadin23/samples/test-playground/uitest/target/error-screenshots/*.png'
                junit 'vaadin23/samples/test-playground/uitest/target/surefire-reports-*/*.xml'
            }

            environment {
                MAVEN_OPTS = '-Xmx2g -Dtest.hostname=linkki-${DOCKER_BUILD_NAME}.dockerhost.i.faktorzehn.de -Dtest.port=80 -Dtest.path=linkki-sample-test-playground-vaadin23'
            }
        }

        stage('Maven Deployment') {
            steps {
                script {
                    withMaven(maven: 'maven 3.5', jdk: 'OpenJDK 11', publisherStrategy: 'EXPLICIT') {
                        // only publish normal releases (no rcs & milestones) on maven central
                        if(params.RELEASE_VERSION ==~ /(\d+\.)+\d+/) {
                            uploadRelease commands: ['mvn javadoc:jar source:jar deploy -PMavenCentralRelease,releaseDocumentation -Ddoc.user=doc']
                        } else {
                            uploadRelease commands: ['mvn javadoc:jar source:jar deploy -Ddoc.user=doc']
                        }
                    }
                }
            }
        }
    }

    post {
        unsuccessful {
            emailext to: env.TEAM_EMAIL, mimeType: 'text/html', subject: 'Jenkins Release Failure - $JOB_NAME', body: '''
                <img src="https://jenkins.io/images/logos/fire/fire.png" style="max-width: 300px;" alt="Jenkins is not happy about it ...">
                <br>
                $BUILD_URL
            '''
        }
    }
}
